[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "chatbot-backend"
version = "1.0.0"
description = "FastAPI backend for React chatbot application"
authors = [
    {name = "ChatBot Team"},
]
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
]

dependencies = [
    "fastapi==0.115.14",
    "uvicorn[standard]==0.34.3",
    "python-dotenv==1.1.1",
    "pydantic-settings==2.10.1",
    "anthropic==0.55.0",
    "fastmcp==2.9.2",
    "litellm>=1.75.5.post1",
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.1",
    "pytest-asyncio==1.0.0",
    "httpx==0.28.1",
    "pytz==2024.2",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # Use of assert detected in tests

[tool.ruff.isort]
known-first-party = ["app"]

[tool.hatch.build.targets.wheel]
packages = ["app"]
